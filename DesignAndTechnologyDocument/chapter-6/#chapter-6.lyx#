#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\options openright
\use_default_options false
\master ../DesignAndTechnologyDocument.lyx
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
What was left
\end_layout

\begin_layout Standard
During the development of this project many constraints and limitations
 were encountered.
 The principal ones were time and the state of the hardware infrastructure
 received.
 Even though many issues were solved and functionalities implemented, there
 are still some that remained to be done.
 Among them are the execution of the evaluation plans, functionalities to
 support recollection of data from the interactions and even the implementation
 of the Marcopolo scenario of interaction proposed in this document.
\end_layout

\begin_layout Standard
Firstly, the implementation of the Marcopolo scenario was heavily hindered
 by the development of a sound localization algorithm with the enough accuracy
 to provide even an acceptable performance of the game.
 The legacy implementation received was thought to fail because of the microphon
es, however, the information extracted from the sound signals to be used
 by this algorithm was too little (only single amplitude measurements that
 were too susceptible to noise) to expect a robust enough localization of
 the source sound.
 To improve the algorithm, it was taken the more sensible option available
 to achieve the desire precision in the sound source localization, that
 was that of using an Interaural Time Difference approach that bases the
 estimation of the position in the delay between the signals measured by
 the trio of microphones.
 
\end_layout

\begin_layout Standard
However, to implement this solution three main problems with the computational
 platform (Arduino) were encountered during its implementation: memory,
 computational power and ADC sampling rate.
 The maximum sampling rate possible with the Arduino Mega in Teo2 was 50
 kHz only sampling one signal, in order to sample the three microphones
 the sample rate would reduce to ~16kHz that would be too little for the
 bandwith of the sound signals, thus, producing aliasing that would affect
 the reliability of the computations.
 Moreover, the time step between samples of the signal of 1/16kHz would
 not provide the resolution required to measure the delay between the signals
 with enough accuracy â€“contrained by the distance between the microphones,
 which determine the delay between the signals.
 On the other hand, the memory in the Arduino Mega (8MB) was not enough
 to store more than ~64ms of each signal (sampled at 16kHz), thus it cause
 the reduction of the amount of information available to run the algorithm.
 Finally, the computation of the delay for this little sample resulted in
 completely erroneous results that took ~3sec to process for just 64ms of
 data.
 The possible efficient computations through the use of the FFT (Fast Fourier
 Transform) were not possible because the memory was not enough to even
 execute it, however, the floating point arithmetic in the Arduino Mega
 microcontroller is slow, so it was not guaranteed an improvement in processing
 time.
 Finally, the possibility to realize this signal processing in the external
 PC was descarted because with the Bluetooth module as the only communication
 link, the data rate available was not enough to allow a real-time algorithm.
\end_layout

\begin_layout Standard
Given the lack of a sound localization algorithm, the Marcopolo scenario
 was decided to be left yet implemented.
 Even though, the dynamic can be simulated using the manual control provided
 by the 
\begin_inset Quotes fld
\end_inset

Talk2Teo
\begin_inset Quotes frd
\end_inset

 functionalities, the autonomous proposed behavior was not possible within
 the time frame of the present project.
\end_layout

\begin_layout Standard
Also, among the automatic behaviors proposed the ones corresponding to the
 pressure 
\end_layout

\begin_layout Standard
By the end, it was proposed to implement a logger to collect data during
 the interaction situations with Teo2 containing information of the behaviors
 executed, some sensors measurement and the time to provide support for
 the evaluation activities.
 However, due to the time contraints, it was not implemented.
 
\end_layout

\begin_layout Section
Future directions
\end_layout

\begin_layout Standard
The solution presented in this project is still far from its full potential.
\end_layout

\begin_layout Standard
One of the main aspects that could be modified in future works with Teo2
 would be to complement the computational architecture with more processing
 power, that is, distribute the tasks of collecting data from sensors and
 control of actuators to the Arduino's microcontroller and add a mini-PC
 or Raspberry Pi that could help in handling more complex algorithms to
 enhance Teo's intelligence.
 For instance,
\end_layout

\begin_layout Itemize
Easily compute digital signal processing algorithm, in order to deal with
 voice recognition, face detection and emotion detection.
\end_layout

\begin_layout Itemize
Add an external ADC able to handle the sampling of the audio signal at rate
 of minimun 40kHz for each microphone, that together with the increase of
 the processing power, be able to implement a robust sound localization
 algorithm.
\end_layout

\begin_layout Itemize
Add a well-designed power stage in the electronics of Teo in order to provide
 the required power to the LED matrix to achive its full brightness and
 to guarantee a reliable performance of the system under demanding situations.
\end_layout

\begin_layout Itemize
Provide enough resources to have an artificial intelligence, which would
 allow Teo to be a more natural play companion in the children lives, not
 
\begin_inset Quotes fld
\end_inset

only
\begin_inset Quotes frd
\end_inset

 a tool used by a therapist.
\end_layout

\begin_layout Itemize
Centralize the network and processing in Teo, so the computer is not as
 essential as in the current state.
\end_layout

\begin_layout Itemize
For the scenario 
\begin_inset Quotes fld
\end_inset

Talk2Teo
\begin_inset Quotes frd
\end_inset

, a tablet application could be implemented in order to substitute the joypad
 to control Teo, so to provide a possible better and more adaptive user
 experience for the therapists.
\end_layout

\begin_layout Itemize
Evaluate if the synthesized voice could be replaced with a real one in order
 to get better engagement of the children vs the flexibility provided by
 Text-to-Speech software.
\end_layout

\end_body
\end_document
