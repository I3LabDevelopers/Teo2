#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
The software of 
\shape italic
Talk2Teo
\shape default
 is distributed in the following way: the manual behaviours are managed
 mainly by the PC, the automatic ones only by Teo2 (Arduino).
\end_layout

\begin_layout Paragraph
PC
\end_layout

\begin_layout Standard
The pc program is called Teo2Control, which provides support to Teo2 internal
 logic and let the therapist control Teo2 through the Xbox 360 controller.
 The application communicates with Teo2 through Bluetooth serial port, it
 is also connected to a Bluetooth speaker.
\end_layout

\begin_layout Subparagraph
Functionality description
\end_layout

\begin_layout Enumerate

\bar under
Control Teo2
\bar default
: the therapist uses the Xbox controller to directly control Teo2.
 Xbox input is caught and parsed by Teo2 control which will forward the
 requested command to Teo2 via Bluetooth.
\end_layout

\begin_layout Enumerate

\bar under
Support Teo2:
\bar default
 Teo2 is unable to communicate with Bluetooth speaker, thus to do so it
 has to send a request to the pc.
 Upon receiving messages from Teo2, Teo2 Control will parse them and perform
 actions accordingly.
 This can include send messages back to Teo2 or send audio files to the
 Bluetooth speaker.
\end_layout

\begin_layout Subparagraph
Architecture description
\end_layout

\begin_layout Standard
Teo2 Control uses an event based architecture, its different components
 communicates through events (like input received from Xbox 360 controller
 or Bluetooth).
 This architecture permit the application to be fully scalable as each function
 or method is independent from the others.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../img/teo2ControlAppArchitecture.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Talk2Teo arhitecture
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:image-1-4-2-3-1-4-1-1-1"

\end_inset

High level architecture of 
\shape italic
Talk2Teo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
UML models
\end_layout

\begin_layout Enumerate
BTManager.
 This component is responsible of receiving and sending Bluetooth messages.
 Anytime a message is received from the Bluetooth serial port connected
 to Teo2 it will raise an event and alert the Parser.
 BTManager also manages the outgoing messages decided by the Parser.
\end_layout

\begin_layout Enumerate
XBManager.
 This component is responsible of receiving Xbox 360 controller input.
 Anytime an input is received from the Xbox 360 controller it will raise
 an event and alert the Parser.
\end_layout

\begin_layout Enumerate
Parser.
 The Parser is the logic of Teo2 Control.
 It decides which action to take depending on the input received, when the
 decision is made it will raise an event alerting the BTManager.
 Using Teo2 Setting is possible to switch between 3 premade sets of commands
 for the controller and to set a custom set; Teo2 control will follow the
 indications in the selected XML file, which maps every key to a command.
\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../img/teo2ControlAppComponentDiagram.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Talk2Teo components diagram
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:image-1-4-2-3-1-4-1-1-1-1"

\end_inset

UML components diagram of Teo2Control
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Incoming and outgoing messages and input from both Xbox and Bluetooth are
 stored in shared buffers to which each component access when a certain
 event is raised.
 For example if a message is received from the Bluetooth port connected
 to Teo2 BTManager will push it in the BT input buffer and raise an event
 to alert the Parser which will pop the message from the same buffer.
\begin_inset Newline newline
\end_inset

The System uses 3 buffers:
\end_layout

\begin_layout Itemize
BT input buffer
\end_layout

\begin_layout Itemize
BT output buffer
\end_layout

\begin_layout Itemize
XB input buffer
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../img/teo2ControlAppSequenceDiagram1.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Talk2Teo sequence diagram 1
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:image-1-4-2-3-1-4-1-1-1-1-1"

\end_inset

This diagram describes the workflow of the system in the case in which the
 user is using the Xbox controller to control Teo2.
 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../img/teo2ControlAppSequenceDiagram2.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Talk2Teo sequence diagram 2
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:image-1-4-2-3-1-4-1-1-1-1-1-1"

\end_inset

Since the Arduino board inside Teo2 is unable to communicate with the Bluetooth
 speaker it requires a computer to play the audio files for it.
 This diagrams describe the process with which Teo2 plays an audio file.
 2.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Arduino
\end_layout

\begin_layout Standard
The Arduino sketch follows this logic:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../img/talk2TeoFSM.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Talk2Teo final state machine
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:image-1-4-2-3-1-4-1-1"

\end_inset

Final state machine of Talk2Teo logic
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Communication protocol
\end_layout

\begin_layout Standard
To communicate with Teo2 a set of fixed commands is used, this set defines
 a protocol of communication between Teo2 and the computer application.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Command
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
move x y z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Move at forward speed x (in m/s), 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
strafe y (in m/s) and angular z (in rad/s)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
happy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set Happy mood
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sad
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set Sad mood
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
scared
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set Scared mood
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
angry
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set Angry mode
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
auto on/off
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Toggle automatic behaviors
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
idle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Set idle state
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
end of sound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Communicate end of playing sounds
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Teo 2 protocol PC-Teo2
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:formal-table-1-2-2-2"

\end_inset

The main commands from PC to Teo2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Command
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Meaning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ready
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teo2 is on and ready to start communication
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
end motion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teo2 has ended automatic movements
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
say x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teo2 requests to say a certain word/phrase x
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Teo 2 protocol Teo2-PC
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:formal-table-1-2-2-2-2"

\end_inset

The main commands from Teo2 to PC
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
When Teo2 is switched on and for all the duration of the session it will
 send “ready” via Bluetooth, this message is caught by Teo2 Control which
 will establish the connection.
 If no “ready” message is received the program will close.
 Notice that each of the PC to Teo2 commands can be set in the XML files
 corresponding to the preset but Teo2 sketch has to be changed too in order
 to recognise new commands.
\end_layout

\end_body
\end_document
